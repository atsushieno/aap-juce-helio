diff --git a/Projects/Android/app/CMakeLists.txt b/Projects/Android/app/CMakeLists.txt
index 665e1e46..67e3a161 100644
--- a/Projects/Android/app/CMakeLists.txt
+++ b/Projects/Android/app/CMakeLists.txt
@@ -3,23 +3,29 @@
 
 cmake_minimum_required(VERSION 3.4.1)
 
+project("helio-sequencer")
+
 set(BINARY_NAME "juce_jni")
 
 add_library("cpufeatures" STATIC "${ANDROID_NDK}/sources/android/cpufeatures/cpu-features.c")
 set_source_files_properties("${ANDROID_NDK}/sources/android/cpufeatures/cpu-features.c" PROPERTIES COMPILE_FLAGS "-Wno-sign-conversion -Wno-gnu-statement-expression")
 
-add_definitions("-DJUCE_ANDROID=1" "-DJUCE_ANDROID_API_VERSION=21" "-DJUCE_ANDROID_GL_ES_VERSION_3_0=1" "-DJUCER_ANDROIDSTUDIO_6AB8437A=1" "-DJUCE_APP_VERSION=3.15" "-DJUCE_APP_VERSION_HEX=0x30f00")
+add_definitions("-DJUCE_ANDROID=1" "-DJUCE_ANDROID_API_VERSION=29" "-DJUCE_ANDROID_GL_ES_VERSION_3_0=1" "-DJUCER_ANDROIDSTUDIO_6AB8437A=1" "-DJUCE_APP_VERSION=3.15" "-DJUCE_APP_VERSION_HEX=0x30f00")
+add_definitions("-DJUCE_USE_ANDROID_OBOE_STABILIZED_CALLBACK=1" "-DJUCE_DONT_AUTO_OPEN_MIDI_DEVICES_ON_MOBILE=1")
+add_subdirectory("../../../ThirdParty/JUCE/modules/juce_audio_devices/native/oboe" "./oboe")
 
 include_directories( AFTER
     "../../../ThirdParty/JUCE/modules/juce_audio_processors/format_types/VST3_SDK"
     "../../Projucer/JuceLibraryCode"
     "../../../ThirdParty/JUCE/modules"
+    "../../../../aap-juce/aap-modules"
+    "../../../ThirdParty/JUCE/modules/juce_audio_devices/native/oboe/include"
     "${ANDROID_NDK}/sources/android/cpufeatures"
 )
 
 enable_language(ASM)
 
-if(JUCE_BUILD_CONFIGURATION MATCHES "DEBUG")
+if(true)#JUCE_BUILD_CONFIGURATION MATCHES "DEBUG")
     add_definitions("-DJUCER_ANDROIDSTUDIO_6AB8437A=1" "-DJUCE_APP_VERSION=3.15" "-DJUCE_APP_VERSION_HEX=0x30f00" "-DDEBUG=1" "-D_DEBUG=1")
     include_directories( AFTER
         "../../Projucer/JuceLibraryCode"
@@ -196,6 +202,7 @@ add_library( ${BINARY_NAME}
     "../../Projucer/JuceLibraryCode/include_juce_opengl.cpp"
     "../../Projucer/JuceLibraryCode/JuceHeader.h"
     "../../Projucer/JuceLibraryCode/UnityBuild.cpp"
+    "../../../../../juceaap.cpp"
 )
 
 set_source_files_properties("../../Projucer/JuceLibraryCode/AppConfig.h" PROPERTIES HEADER_FILE_ONLY TRUE)
@@ -217,11 +224,20 @@ find_library(android "android")
 find_library(glesv3 "GLESv3")
 find_library(egl "EGL")
 
+find_package(androidaudioplugin REQUIRED CONFIG)
+target_include_directories( ${BINARY_NAME} PRIVATE androidaudioplugin)
+target_compile_definitions( ${BINARY_NAME} PRIVATE
+        JUCEAAP_USE_UNIQUE_ID=1
+        JUCEAAP_HOSTED_PARAMETER=1
+)
+
 target_link_libraries( ${BINARY_NAME}
 
     ${log}
     ${android}
     ${glesv3}
     ${egl}
+    oboe
     "cpufeatures"
+    androidaudioplugin::androidaudioplugin
 )
diff --git a/Projects/Android/app/build.gradle b/Projects/Android/app/build.gradle
index cd1afcaf..391a2f35 100644
--- a/Projects/Android/app/build.gradle
+++ b/Projects/Android/app/build.gradle
@@ -1,104 +1,52 @@
 apply plugin: 'com.android.application'
+apply plugin: 'kotlin-android'
 
 android {
-    compileSdkVersion 28
+    namespace "org.androidaudioplugin.ports.juce.helio"
+    compileSdkVersion libs.versions.android.compileSdk.get().toInteger()
     externalNativeBuild {
         cmake {
             path "CMakeLists.txt"
         }
     }
-    signingConfigs {
-        juceSigning {
-            storeFile     file("${System.properties['user.home']}${File.separator}helio.keystore")
-            storePassword "android"
-            keyAlias      "release"
-            keyPassword   "android"
-            storeType     "jks"
-        }
-    }
 
     defaultConfig {
-        applicationId "fm.helio"
-        minSdkVersion    21
-        targetSdkVersion 28
+        applicationId "org.androidaudioplugin.ports.juce.helio"
+        minSdkVersion    libs.versions.android.minSdk.get().toInteger()
+        ndk {
+            // should we make it customizable? We skip others just to reduce build time.
+            abiFilters "x86_64", "arm64-v8a"
+        }
         externalNativeBuild {
             cmake {
-                arguments "-DANDROID_TOOLCHAIN=clang", "-DANDROID_PLATFORM=android-21", "-DANDROID_STL=c++_static", "-DANDROID_CPP_FEATURES=exceptions rtti", "-DANDROID_ARM_MODE=arm", "-DANDROID_ARM_NEON=TRUE", "-DCMAKE_CXX_STANDARD=14", "-DCMAKE_CXX_EXTENSIONS=OFF"
-            }
-        }
-    }
-
-    buildTypes {
-         debug {
-             initWith debug
-             debuggable    true
-             jniDebuggable true
-             signingConfig signingConfigs.juceSigning
-         }
-         release {
-             initWith release
-             debuggable    false
-             jniDebuggable false
-             signingConfig signingConfigs.juceSigning
-         }
-    }
-
-    flavorDimensions "default"
-    productFlavors {
-        debug_ {
-            ndk {
-                abiFilters "armeabi-v7a", "arm64-v8a"
+                arguments "-DANDROID_TOOLCHAIN=clang", "-DANDROID_PLATFORM=android-29", "-DANDROID_STL=c++_shared", "-DANDROID_CPP_FEATURES=exceptions rtti", "-DANDROID_ARM_MODE=arm", "-DANDROID_ARM_NEON=TRUE", "-DCMAKE_CXX_STANDARD=20", "-DCMAKE_CXX_EXTENSIONS=OFF"
             }
-            externalNativeBuild {
-                cmake {
-                    arguments "-DJUCE_BUILD_CONFIGURATION=DEBUG", "-DCMAKE_CXX_FLAGS_DEBUG=-O0", "-DCMAKE_C_FLAGS_DEBUG=-O0"
-                }
-            }
-
-            dimension "default"
-       }
-        release_ {
-            ndk {
-                abiFilters "armeabi-v7a", "arm64-v8a"
-            }
-            externalNativeBuild {
-                cmake {
-                    arguments "-DJUCE_BUILD_CONFIGURATION=RELEASE", "-DCMAKE_CXX_FLAGS_RELEASE=-O3", "-DCMAKE_C_FLAGS_RELEASE=-O3"
-                }
-            }
-
-            dimension "default"
-       }
-    }
-
-    variantFilter { variant ->
-        def names = variant.flavors*.name
-        if (names.contains ("debug_")
-              && variant.buildType.name != "debug") {
-            setIgnore(true)
-        }
-        if (names.contains ("release_")
-              && variant.buildType.name != "release") {
-            setIgnore(true)
         }
+        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
     }
 
     sourceSets {
         main.java.srcDirs +=
             ["../../../ThirdParty/JUCE/modules/juce_core/native/javacore/init",
-             "../../../ThirdParty/JUCE/modules/juce_core/native/javacore/app"]
+             "../../../ThirdParty/JUCE/modules/juce_core/native/javacore/app",
+             "../../../../aap-juce/java"]
 
         main.res.srcDirs +=
             []
     }
 
-    repositories {
+    buildFeatures {
+        prefab true
     }
 
     dependencies {
+        implementation libs.startup.runtime
+        implementation libs.aap.core
+        implementation libs.aap.ui.compose
+        implementation libs.aap.ui.web
     }
 
-ndkVersion "21.3.6528147"
+ndkVersion libs.versions.ndk.get()
 
 }
 
diff --git a/Projects/Android/app/src/debug/res/values/string.xml b/Projects/Android/app/src/debug/res/values/string.xml
index ff2d0618..7c2dbca7 100644
--- a/Projects/Android/app/src/debug/res/values/string.xml
+++ b/Projects/Android/app/src/debug/res/values/string.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 
 <resources>
-  <string name="app_name">Helio</string>
+  <string name="app_name">AAP Helio</string>
 </resources>
diff --git a/Projects/Android/app/src/main/AndroidManifest.xml b/Projects/Android/app/src/main/AndroidManifest.xml
index 89f045a2..0398c350 100644
--- a/Projects/Android/app/src/main/AndroidManifest.xml
+++ b/Projects/Android/app/src/main/AndroidManifest.xml
@@ -1,10 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android" android:versionCode="315" android:versionName="3.15"
-          package="fm.helio">
+          xmlns:tools="http://schemas.android.com/tools">
   <supports-screens android:smallScreens="true" android:normalScreens="true" android:largeScreens="true" android:anyDensity="true"
                     android:xlargeScreens="true"/>
-  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
   <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
   <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
   <uses-permission android:name="android.permission.BLUETOOTH_ADMIN"/>
@@ -20,5 +19,13 @@
         <category android:name="android.intent.category.LAUNCHER"/>
       </intent-filter>
     </activity>
-  </application>
-</manifest>
+      <provider android:name="androidx.startup.InitializationProvider"
+          android:authorities="${applicationId}.juce_app_initializer"
+          android:exported="false"
+          tools:node="merge"
+          tools:replace="android:authorities">
+        <meta-data android:name="org.androidaudioplugin.hosting.AudioPluginClientInitializer" android:value="androidx.startup"/>
+        <meta-data android:name="org.androidaudioplugin.juce.JuceAppInitializer" android:value="androidx.startup" />
+      </provider>
+    </application>
+  </manifest>
diff --git a/Projects/Android/app/src/main/res/values/string.xml b/Projects/Android/app/src/main/res/values/string.xml
index ff2d0618..7c2dbca7 100644
--- a/Projects/Android/app/src/main/res/values/string.xml
+++ b/Projects/Android/app/src/main/res/values/string.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 
 <resources>
-  <string name="app_name">Helio</string>
+  <string name="app_name">AAP Helio</string>
 </resources>
diff --git a/Projects/Android/app/src/release/res/values/string.xml b/Projects/Android/app/src/release/res/values/string.xml
index ff2d0618..7c2dbca7 100644
--- a/Projects/Android/app/src/release/res/values/string.xml
+++ b/Projects/Android/app/src/release/res/values/string.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 
 <resources>
-  <string name="app_name">Helio</string>
+  <string name="app_name">AAP Helio</string>
 </resources>
diff --git a/Projects/Android/build.gradle b/Projects/Android/build.gradle
index 0fe5b4aa..a61d4e1e 100644
--- a/Projects/Android/build.gradle
+++ b/Projects/Android/build.gradle
@@ -1,16 +1,17 @@
-buildscript {
-   repositories {
-       google()
-       jcenter()
-   }
-   dependencies {
-       classpath 'com.android.tools.build:gradle:4.0.0'
-   }
+plugins {
+    alias(libs.plugins.android.application) apply false
+    alias(libs.plugins.android.library) apply false
+    alias(libs.plugins.kotlin.android) apply false
+    alias(libs.plugins.compose.compiler) apply false
+    alias(libs.plugins.dokka) apply false
+    id ("maven-publish")
 }
 
 allprojects {
-   repositories {
-       google()
-       jcenter()
-   }
+    ext.enable_asan = false
+    repositories {
+        mavenLocal()
+        mavenCentral()
+        google()
+    }
 }
diff --git a/Projects/Android/gradle/wrapper/gradle-wrapper.jar b/Projects/Android/gradle/wrapper/gradle-wrapper.jar
index 13372aef..e6441136 100644
Binary files a/Projects/Android/gradle/wrapper/gradle-wrapper.jar and b/Projects/Android/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/Projects/Android/gradle/wrapper/gradle-wrapper.properties b/Projects/Android/gradle/wrapper/gradle-wrapper.properties
index 49479605..e2847c82 100644
--- a/Projects/Android/gradle/wrapper/gradle-wrapper.properties
+++ b/Projects/Android/gradle/wrapper/gradle-wrapper.properties
@@ -1 +1,7 @@
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.1.1-all.zip
\ No newline at end of file
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-8.11.1-bin.zip
+networkTimeout=10000
+validateDistributionUrl=true
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
diff --git a/Projects/Android/settings.gradle b/Projects/Android/settings.gradle
index 6b14f4e7..4bc274a8 100644
--- a/Projects/Android/settings.gradle
+++ b/Projects/Android/settings.gradle
@@ -1,2 +1,16 @@
-rootProject.name = 'Helio'
-include ':app'
\ No newline at end of file
+pluginManagement {
+    repositories {
+        google()
+        gradlePluginPortal()
+        mavenCentral()
+    }
+}
+dependencyResolutionManagement {
+    repositories {
+        mavenLocal()
+        google()
+        mavenCentral()
+    }
+}
+rootProject.name='helio-sequencer'
+include ':app'
diff --git a/Source/Core/Audio/AudioCore.cpp b/Source/Core/Audio/AudioCore.cpp
index 1286f78f..691c8a13 100644
--- a/Source/Core/Audio/AudioCore.cpp
+++ b/Source/Core/Audio/AudioCore.cpp
@@ -24,12 +24,14 @@
 #include "SoundFontSynthAudioPlugin.h"
 #include "SerializationKeys.h"
 #include "AudioMonitor.h"
+#include "aap_audio_plugin_client/aap_audio_plugin_client.cpp"
 
 void AudioCore::initAudioFormats(AudioPluginFormatManager &formatManager)
 {
     formatManager.addDefaultFormats();
     formatManager.addFormat(new InternalIODevicesPluginFormat());
     formatManager.addFormat(new BuiltInSynthsPluginFormat());
+    formatManager.addFormat(new juceaap::AndroidAudioPluginFormat());
 }
 
 AudioCore::AudioCore()
diff --git a/Source/Core/Audio/BuiltIn/SoundFont/SoundFont2Sound.cpp b/Source/Core/Audio/BuiltIn/SoundFont/SoundFont2Sound.cpp
index 4ec18f80..816b0677 100644
--- a/Source/Core/Audio/BuiltIn/SoundFont/SoundFont2Sound.cpp
+++ b/Source/Core/Audio/BuiltIn/SoundFont/SoundFont2Sound.cpp
@@ -479,6 +479,8 @@ struct SoundFont2Generator final
     const char *name;
     Type type;
 
+    SoundFont2Generator(const char *name, Type type) : name(name), type(type) {}
+
     enum
     {
         startAddrsOffset,
